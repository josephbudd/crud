package main

import (
	"path/filepath"

	"github.com/boltdb/bolt"
	"github.com/pkg/errors"

	"github.com/josephbudd/crud/domain/data/filepaths"
	"github.com/josephbudd/crud/domain/store"
	"github.com/josephbudd/crud/domain/store/storing"
)

/*
	DO NOT EDIT THIS FILE.

	USE THE TOOL kickstore TO ADD OR REMOVE STORES.

	kickstore will edit this file for you.

*/

// buildStores makes bolt data stores.
// It also opens the bolt database.
// The stores can be close with stores.Close()
func buildStores() (stores *store.Stores, err error) {

	defer func() {
		if err != nil {
			err = errors.WithMessage(err, "buildStores()")
		}
	}()

	var path string
	if path, err = filepaths.BuildUserSubFoldersPath("boltdb"); err != nil {
		err = errors.WithMessage(err, "filepaths.BuildUserSubFoldersPath(\"boltdb\")")
		return
	}
	path = filepath.Join(path, "stores.nosql")
	var db *bolt.DB
	if db, err = bolt.Open(path, filepaths.GetFmode(), nil); err != nil {
		err = errors.WithMessage(err, "bolt.Open(path, filepaths.GetFmode(), nil)")
		return
	}
	stores = &store.Stores{
		Contact: storing.NewContactBoltDB(db, path, filepaths.GetFmode()),
	}
	return
}
